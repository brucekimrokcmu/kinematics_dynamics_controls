%main-assignment4
poses = importdata("poses.txt"); 
kp = 1; ko = 1;

A = zeros(3*60, 9);
B = zeros(3*60, 1);
omega_b = zeros(3*60, 6);

wb_1 = 0;
wb_dot_1 = 0;
wb_dpt_2 = 0;

for i = 1:length(poses)-2
    xs = poses(i,2:end);
    xd = poses(i+1,2:end);
    xd2 = poses(i+2, 2:end);
    
    vs_tmp = vs_f(xs,xd,kp,ko);
    vs = vs_tmp(1:3);
    ws = vs_tmp(4:end);
    what_s = what_f(ws);
    quat = [xs(end), xs(4), xs(5), xs(6)];
    rotm = quat2rotm(quat);
%     qa = transpose(xs(1:3));
    A_tmp = [eye(3) i*eye(3) rotm];
    B_tmp = xs(1:3)';
%     A_tmp = [rotm', rotm'*what_s*rotm];
%     B_tmp = [rotm'*vs + rotm'*what_s*qa]; 
    A(3*(i-1)+1:3*(i-1)+3, :) = A_tmp;
    B(3*(i-1)+1:3*(i-1)+3, :) = B_tmp;

    vs_tmp2 = vs_f(xd,xd2,kp,ko);
    vs2 = vs_tmp2(1:3);
    ws2 = vs_tmp2(4:end);
    wb = rotm'*ws;

    what_b = what_f(wb);
    wtil_b = wtil_f(wb);

    wb2 = rotm'*ws2;
    what_b2 = what_f(wb2);  
    
    diff_wb = wb2-wb;
    diff_wb_til = wtil_f(diff_wb);

    w_temp = what_b*wtil_b + diff_wb_til;
    omega_b(3*(i-1)+1:3*(i-1)+3, :) = w_temp;



end
sol = inv(A'*A)*A'*B;
com_vel = sol(4:6);
qb_final = sol(7:end);

[U, S, V] = svd(omega_b);
Ib_tilda = V(:, end);
Ib = [Ib_tilda(1,1), Ib_tilda(2,1), Ib_tilda(3,1);...
      Ib_tilda(2,1), Ib_tilda(4,1), Ib_tilda(5,1);...
      Ib_tilda(3,1), Ib_tilda(5,1), Ib_tilda(6,1)];

distanceFromCom = norm(qb_final);

angMomentum = rotm*Ib*wb;


